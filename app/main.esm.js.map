{"version":3,"file":"main.esm.js","sources":["../main/src/utils/user-agent.ts","../main/src/app/event/index.ts","../main/src/app/event/debug.ts","../main/src/app/event/webview.ts","../main/src/app/views/dialog-manager.ts","../main/src/app/scheme.ts","../main/src/app/views/webview.ts","../main/src/data/index.ts","../main/src/app/views/webview-manager.ts","../main/src/app/window.ts","../main/src/app/window-session.ts","../main/src/app.ts","../main/src/index.ts"],"sourcesContent":["import { app } from 'electron'\n\nconst regex: [string | RegExp, string][] = [\n  [/ Electron\\\\?.(\\S+)/, ''],\n  [` ${app.name}/${app.getVersion()}`, ''],\n  [/Chrome\\/(\\d+)\\.[^ ]*/, 'Chrome/$1.0.0.0']\n]\n\nexport const getUserAgent = (): string => {\n  let userAgent = app.userAgentFallback\n  regex.forEach((r) => {\n    userAgent = userAgent.replace(r[0], r[1])\n  })\n  return userAgent\n}\n","import { ipcMain, IpcMainEvent } from 'electron'\n\nimport { App } from '@/app'\nimport { Window } from '@/app/window'\n\nimport { registerDebug } from '@/app/event/debug'\nimport { registerDialog } from '@/app/event/dialog'\nimport { registerWebview } from '@/app/event/webview'\n\nexport const register = (window: Window) => {\n  const { app } = window\n  registerWindow(app)\n\n  registerDebug()\n  registerDialog(app)\n  registerWebview(app)\n}\n\nconst registerWindow = (app: App) => {\n  const window = (event: IpcMainEvent): Window | undefined => {\n    return app.windows.get(event.frameId)\n  }\n\n  // 刷新窗口\n  ipcMain.on('renderer:window-handle:reload', (event) => {\n    // 移除所有视图\n    window(event)?.webviewManager.destroy()\n    window(event)?.webContents.reloadIgnoringCache()\n\n    // 重新加载数据\n  })\n\n  // 关闭窗口\n  ipcMain.on('renderer:window:close', (event) => {\n    window(event)?.window.close()\n  })\n\n  // 还原窗口\n  ipcMain.on('renderer:window:restore', (event) => {\n    window(event)?.window.restore()\n  })\n\n  // 最小化窗口\n  ipcMain.on('renderer:window:minimize', (event) => {\n    window(event)?.window.minimize()\n  })\n\n  // 最大化窗口\n  ipcMain.on('renderer:window:maximize', (event) => {\n    window(event)?.window.maximize()\n  })\n}\n","import { ipcMain } from 'electron'\n\nimport { getUserAgent } from '@/utils/user-agent'\n\nexport const registerDebug = () => {\n  ipcMain.on('debug:user-agent', (event) => {\n    event.returnValue = getUserAgent()\n  })\n}\n","import { ipcMain, IpcMainEvent } from 'electron'\n\nimport { App } from '@/app'\nimport { Window } from '@/app/window'\n\nexport const registerWebview = (app: App) => {\n  const window = (event: IpcMainEvent): Window | undefined => {\n    return app.windows.get(event.frameId)\n  }\n\n  // 关闭\n  ipcMain.on('renderer:webview:close', (event, args) => {\n    window(event)?.webviewManager.close(args)\n  })\n  // 创建\n  ipcMain.on('renderer:webview:create', (event, args) => {\n    window(event)?.webviewManager.create(args)\n  })\n  // 切换\n  ipcMain.on('renderer:webview:select', (event, args) => {\n    window(event)?.webviewManager.select(args)\n  })\n\n  // 设置 margin\n  ipcMain.on('renderer:webview:update:margin', (event, args) => {\n    window(event)?.webviewManager.setMargin(args)\n  })\n\n  // 停止加载\n  ipcMain.on('renderer:webview:control:stop', (event) => {\n    window(event)?.webviewManager.selected?.webContents.stop()\n  })\n  // 重新加载\n  ipcMain.on('renderer:webview:control:reload', (event) => {\n    window(event)?.webviewManager.selected?.webContents.reload()\n  })\n  // 后退\n  ipcMain.on('renderer:webview:control:go-back', (event) => {\n    window(event)?.webviewManager.selected?.webContents.goBack()\n  })\n  // 前进\n  ipcMain.on('renderer:webview:control:go-forward', (event) => {\n    window(event)?.webviewManager.selected?.webContents.goForward()\n  })\n}\n","import { App } from '@/app'\nimport { Window } from '@/app/window'\n\nexport class DialogManager {\n  public app: App\n  public window: Window\n\n  constructor(window: Window) {\n    this.app = window.app\n    this.window = window\n  }\n\n  destroy() {\n    console.log('destroy')\n  }\n}\n","import { net, Session } from 'electron'\n\nimport { App } from '@/app'\n\nexport const WEBUI_PROTOCOL = 'app'\n\nexport const ERROR_PROTOCOL = 'app-error'\n\nexport const NETWORK_ERROR_HOST = 'network-error'\n\nexport const getWebBaseURL = (page: string) => {\n  return `${WEBUI_PROTOCOL}://${page}.html`\n}\n\nexport const getWebErrorBaseURL = (url: string, code: number, description: string) => {\n  const host = new URL(url).host\n  return `${ERROR_PROTOCOL}://${NETWORK_ERROR_HOST}?url=${url}&host=${host}&code=${code}&description=${description}`\n}\n\nexport const registerProtocol = (app: App, session: Session) => {\n  session.protocol.handle(ERROR_PROTOCOL, () => {\n    return net.fetch(`file:///${app.renderer}/network-error.html`)\n  })\n\n  session.protocol.handle(WEBUI_PROTOCOL, (request) => {\n    const parsed = new URL(request.url)\n    return net.fetch(`file:///${app.renderer}/${parsed.pathname}`)\n  })\n}\n","import { WebContentsView } from 'electron'\n\nimport { App } from '@/app'\nimport { Window } from '@/app/window'\n\nimport { getUserAgent } from '@/utils/user-agent'\nimport { getWebErrorBaseURL } from '@/app/scheme'\n\nimport { createFavicon, createHistory } from '@/data'\n\nexport interface Args {\n  id: string\n  url: string\n  active?: boolean\n}\n\nexport class Webview {\n  public id: string = ''\n  public app: App\n  public window: Window\n  public webview: WebContentsView\n\n  public error: boolean = false\n  public favicon: string = ''\n  public bounds: IBounds = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }\n\n  public url: string = ''\n  public title: string = ''\n  public originURL: string = ''\n\n  constructor(window: Window, args: Args) {\n    this.id = args.id\n    this.app = window.app\n    this.window = window\n    this.webview = new WebContentsView({\n      webPreferences: {\n        preload: this.app.viewPreload,\n        sandbox: true,\n        plugins: true,\n        partition: 'persist:webview',\n        javascript: true,\n        webSecurity: true,\n        nodeIntegration: false,\n        contextIsolation: true\n      }\n    })\n\n    this.webview.setBackgroundColor('#FFFFFFFF')\n\n    this.updateWebview('loading', true)\n    this.webContents.userAgent = getUserAgent()\n    this.webContents.loadURL(args.url).then(() => {})\n\n    // 注册监听事件\n    this.setupListener()\n  }\n\n  reload() {\n    if (!this.error) {\n      this.webContents.reload()\n    } else {\n      this.webContents.loadURL(this.url).then(() => {})\n    }\n  }\n\n  destroy() {\n    ;(this.webContents as any).destroy()\n  }\n\n  setBounds(bounds: IBounds) {\n    this.bounds = bounds\n    this.webview.setBounds(bounds)\n  }\n\n  updateWebview = (event: string, args: any) => {\n    this.window.webContents.send('main:webview:state:update', {\n      id: this.id,\n      args: args,\n      event: event\n    })\n  }\n\n  // https://www.electronjs.org/zh/docs/latest/api/web-contents\n  setupListener() {\n    const updateURL = (url?: string) => {\n      if (!url) {\n        url = this.webContents.getURL()\n      }\n      this.url = url\n      this.updateBookmarkState()\n      if (!this.error) {\n        this.updateWebview('url', this.url)\n      } else {\n        this.updateWebview('url', this.originURL)\n      }\n    }\n\n    // 监听加载失败\n    this.webContents.addListener('did-fail-load', async (_, errorCode, errorDescription, validatedURL, isMainFrame) => {\n      // -3代表，用户手动终止了加载\n      if (isMainFrame && errorCode != -3) {\n        this.error = true\n        this.originURL = validatedURL\n\n        console.error('browser-view did-fail-load', validatedURL, errorCode, errorDescription)\n\n        // 加载错误页面的URL\n        await this.webContents.loadURL(getWebErrorBaseURL(validatedURL, errorCode, errorDescription))\n      }\n      console.info('browser-view did-fail-load', errorCode, errorDescription)\n    })\n\n    // 监听开始加载\n    this.webContents.addListener('did-start-loading', async () => {\n      this.error = false\n      this.updateWebview('loading', true)\n      console.log('did-start-loading')\n    })\n\n    // 监听加载完成\n    this.webContents.addListener('did-stop-loading', async () => {\n      this.updateWebview('loading', false)\n      console.log('did-stop-loading')\n    })\n\n    // 监听 title 改变\n    this.webContents.addListener('page-title-updated', async (_event, title) => {\n      this.title = title\n      this.updateWebview('title', title)\n      console.log('page-title-updated', this.title)\n    })\n\n    // 监听 favicon 改变\n    this.webContents.addListener('page-favicon-updated', async (_event, favicons) => {\n      this.favicon = favicons[0]\n      createFavicon({\n        url: this.url,\n        favicon: this.favicon\n      })\n      createHistory({\n        url: this.url,\n        title: this.title,\n        favicon: this.favicon\n      })\n      this.updateWebview('favicon', this.favicon)\n      console.log('page-favicon-updated', this.favicon)\n    })\n\n    this.webContents.addListener('did-start-navigation', async ({ url, isMainFrame }) => {\n      if (!isMainFrame) {\n        return\n      }\n      updateURL(url)\n      this.updateNavigationState()\n      console.log('did-start-navigation', url)\n    })\n\n    // 监听打开新窗口\n    this.webContents.setWindowOpenHandler((details) => {\n      const { url, frameName, disposition } = details\n      if (url == 'about:blank') {\n        return { action: 'allow' }\n      }\n\n      const create = () => {\n        this.window.webContents.send('main:webview:create', { url: url, active: true })\n      }\n\n      if (disposition == 'new-window' && frameName == '_blank') {\n        create()\n        return { action: 'deny' }\n      }\n      if (disposition == 'foreground-tab' || disposition == 'background-tab') {\n        create()\n        return { action: 'deny' }\n      }\n      return { action: 'allow' }\n    })\n  }\n\n  updateBookmarkState() {}\n\n  updateNavigationState() {\n    if (this.webContents.isDestroyed()) {\n      return\n    }\n\n    if (this.window.webviewManager.selected !== this) {\n      return\n    }\n\n    // 通知视图更新\n    this.window.webContents.send('main:webview:navigation:update', {\n      canGoBack: this.webContents.canGoBack(),\n      canGoForward: this.webContents.canGoForward(),\n      canReload: !this.webContents.isLoading()\n    })\n  }\n\n  get webContents() {\n    return this.webview.webContents\n  }\n}\n","export const createFavicon = (f: IFavicon) => {\n  console.log(f)\n}\n\nexport const createHistory = (h: IHistory) => {\n  console.log(h)\n}\n","import { App } from '@/app'\nimport { Window } from '@/app/window'\nimport { Args, Webview } from '@/app/views/webview'\n\nexport class WebviewManager {\n  public app: App\n  public window: Window\n\n  public margin: IMargin = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n\n  public views = new Map<string, Webview>()\n\n  public selected: Webview | null = null\n  public fullscreen = false\n\n  constructor(window: Window) {\n    this.app = window.app\n    this.window = window\n  }\n\n  destroy() {\n    this.views.forEach((view: Webview) => view.destroy())\n  }\n\n  close(args: Args) {\n    const view = this.views.get(args.id)\n    if (!view) {\n      return\n    }\n    view.destroy()\n    this.views.delete(args.id)\n  }\n\n  create(args: Args) {\n    const view = new Webview(this.window, args)\n    if (!args.active) {\n      // 仅缓存\n      this.cacheWebview(args.id, view)\n      return\n    }\n\n    // 更新视图\n    this.updateWebview(args.id, view)\n  }\n\n  select(args: Args) {\n    const view = this.views.get(args.id)\n    if (!view || view === this.selected) {\n      // 视图不存在 或 视图与当前视图相同\n      return\n    }\n\n    // 更新视图\n    this.updateWebview(args.id, view)\n  }\n\n  update(args: Args) {\n    if (!this.selected) {\n      return\n    }\n\n    // 需要删除当前视图\n    args.id = this.selected.id\n    this.selected.destroy()\n\n    const view = new Webview(this.window, args)\n\n    // 更新视图\n    this.updateWebview(args.id, view)\n  }\n\n  setBounds() {\n    if (!this.selected) {\n      return\n    }\n\n    const { top, left, right, bottom } = this.margin\n    const { width, height } = this.window.contentBounds\n    this.selected.setBounds({\n      x: this.fullscreen ? 0 : left,\n      y: this.fullscreen ? 0 : top,\n      width: width - right,\n      height: this.fullscreen ? height : height - top - bottom\n    })\n  }\n\n  setMargin(margin: IMargin) {\n    if (margin.top != undefined) {\n      this.margin.top = margin.top\n    }\n    if (margin.left != undefined) {\n      this.margin.left = margin.left\n    }\n    if (margin.right != undefined) {\n      this.margin.right = margin.right\n    }\n    if (margin.bottom != undefined) {\n      this.margin.bottom = margin.bottom\n    }\n\n    // 刷新\n    if (margin.refresh) {\n      this.setBounds()\n    }\n  }\n\n  cacheWebview(key: string, view: Webview) {\n    if (!this.views.has(key) || this.views.get(key) !== view) {\n      this.views.set(key, view)\n    }\n  }\n\n  updateWebview(key: string, view: Webview) {\n    if (this.selected && this.selected !== view) {\n      this.window.contentView.removeChildView(this.selected.webview)\n    }\n    this.window.webContents.focus()\n    this.window.contentView.addChildView(view.webview)\n\n    // 设置选中\n    this.selected = view\n    this.setBounds()\n    this.cacheWebview(key, view)\n\n    // 更新书签状态\n    this.selected.updateBookmarkState()\n\n    // 更新导航信息\n    this.selected.updateNavigationState()\n  }\n}\n","import { BaseWindow, WebContentsView } from 'electron'\n\nimport { App } from '@/app'\n\nimport { register } from '@/app/event'\n\nimport { DialogManager } from '@/app/views/dialog-manager'\nimport { WebviewManager } from '@/app/views/webview-manager'\n\nexport interface Args {\n  index: string\n  bounds?: IBounds\n  preload?: string\n}\n\nexport class Window {\n  public app: App\n  public window: BaseWindow\n  public webview: WebContentsView\n\n  public dialogManager: DialogManager\n  public webviewManager: WebviewManager\n\n  constructor(app: App, args: Args) {\n    this.app = app\n\n    const { index, preload, bounds } = args\n    this.window = new BaseWindow({\n      frame: false,\n      x: bounds ? bounds.x : 120,\n      y: bounds ? bounds.y : 120,\n      width: bounds ? bounds.width : 1200,\n      height: bounds ? bounds.height : 800,\n      minWidth: 720,\n      minHeight: 480\n    })\n\n    register(this)\n    if (bounds && bounds.maximized) {\n      this.window.maximize()\n    }\n\n    // 主视图\n    this.webview = new WebContentsView({\n      webPreferences: {\n        preload: preload,\n        nodeIntegration: true,\n        contextIsolation: true\n      }\n    })\n\n    // 加载主视图\n    this.setBounds()\n    this.webContents.loadFile(index).then(() => {\n      this.setupListener()\n      this.webContents.openDevTools({ mode: 'detach' })\n    })\n    this.contentView.addChildView(this.webview)\n\n    // 初始化对话框管理器\n    this.dialogManager = new DialogManager(this)\n\n    // 初始化 浏览器视图 管理器\n    this.webviewManager = new WebviewManager(this)\n  }\n\n  setBounds() {\n    const { width, height } = this.window.getBounds()\n    this.webview.setBounds({ x: 0, y: 0, width: width, height: height })\n  }\n\n  setupListener() {\n    this.window.on('close', () => {\n      this.dialogManager.destroy()\n      this.webviewManager.destroy()\n\n      this.app.windows.delete(this.id)\n\n      // TODO: 保存当前窗口状态\n    })\n\n    this.window.on('closed', () => {\n      // 销毁窗口\n      this.window.destroy()\n    })\n\n    this.window.on('focus', () => {\n      // 设置当前窗口为当前窗口\n    })\n\n    this.window.on('resize', () => {\n      this.setBounds()\n      this.webviewManager.setBounds()\n    })\n\n    this.window.on('restore', () => {\n      this.webContents.send('main:window:on-unmaximize')\n    })\n    this.window.on('maximize', () => {\n      this.webContents.send('main:window:on-maximize')\n    })\n    this.window.on('unmaximize', () => {\n      this.webContents.send('main:window:on-unmaximize')\n    })\n\n    this.window.on('enter-full-screen', () => {\n      this.webviewManager.fullscreen = true\n      this.webviewManager.setBounds()\n    })\n\n    this.window.on('leave-full-screen', () => {\n      this.webviewManager.fullscreen = false\n      this.webviewManager.setBounds()\n    })\n  }\n\n  get id() {\n    return this.window.id\n  }\n\n  get webContents() {\n    return this.webview.webContents\n  }\n\n  get contentView() {\n    return this.window.contentView\n  }\n\n  get contentBounds() {\n    return this.window.getContentBounds()\n  }\n}\n","import { session } from 'electron'\n\nimport { App } from '@/app'\nimport { registerProtocol } from '@/app/scheme'\n\nexport class WindowSession {\n  public view = session.fromPartition('persist:webview')\n  public viewIncognito = session.fromPartition('incognito:webview')\n\n  constructor(app: App) {\n    registerProtocol(app, this.view)\n  }\n}\n","import { join } from 'path'\n\nimport { app, Menu } from 'electron'\n\nimport { Args, Window } from '@/app/window.js'\nimport { WindowSession } from '@/app/window-session'\n\nexport const appPath = app.getAppPath()\nexport const dataPath = join(app.getPath('userData'), 'app')\n\nexport class App {\n  public session: WindowSession | null = null\n  public windows = new Map<number, Window>()\n\n  public preload = join(appPath, 'preload')\n  public renderer = join(appPath, 'renderer')\n\n  public mainPreload = this.preload + '/main.js'\n  public viewPreload = this.preload + '/view.js'\n  public mainRenderer = this.renderer + '/main.html'\n\n  // public stateFile = dataPath + '/window-state.json'\n  // public storagePath = dataPath + '/storage'\n  // public extensionPath = dataPath + '/extensions'\n\n  open() {\n    const args: Args = {\n      index: this.mainRenderer,\n      preload: this.mainPreload,\n      bounds: {\n        x: 80,\n        y: 80,\n        width: 1200,\n        height: 800\n      }\n    }\n    const window = new Window(mainApp, args)\n    this.windows.set(window.id, window)\n  }\n\n  start() {\n    if (!app.requestSingleInstanceLock()) {\n      app.quit()\n      return\n    }\n\n    Menu.setApplicationMenu(null)\n    app.whenReady().then(() => {\n      this.open()\n\n      this.session = new WindowSession(this)\n    })\n  }\n}\n\nexport const mainApp = new App()\n","import { release } from 'os'\nimport { app } from 'electron'\n\nimport { mainApp } from '@/app'\n\nif (release().startsWith('6.1')) {\n  app.disableHardwareAcceleration()\n}\nif (process.platform === 'win32') {\n  app.setAppUserModelId(app.getName())\n}\n\nconst setupApp = () => {\n  app.on('window-all-closed', () => {\n    if (process.platform !== 'darwin') {\n      app.quit()\n    }\n  })\n\n  // 暂时忽略ssl证书问题\n  app.on('certificate-error', (event, webContents, url, error, certificate, callback) => {\n    event.preventDefault()\n    callback(true)\n  })\n\n  mainApp.start()\n}\n\nsetupApp()\n"],"names":["regex","app","name","getVersion","getUserAgent","userAgent","userAgentFallback","forEach","r","replace","register","window","registerWindow","ipcMain","on","event","returnValue","windows","get","frameId","args","webviewManager","close","create","select","setMargin","selected","webContents","stop","reload","goBack","goForward","registerWebview","destroy","reloadIgnoringCache","restore","minimize","maximize","DialogManager","constructor","this","console","log","ERROR_PROTOCOL","Webview","id","webview","error","favicon","bounds","x","y","width","height","url","title","originURL","WebContentsView","webPreferences","preload","viewPreload","sandbox","plugins","partition","javascript","webSecurity","nodeIntegration","contextIsolation","setBackgroundColor","updateWebview","loadURL","then","setupListener","setBounds","send","updateURL","getURL","updateBookmarkState","addListener","async","_","errorCode","errorDescription","validatedURL","isMainFrame","code","description","host","URL","getWebErrorBaseURL","info","_event","favicons","f","h","updateNavigationState","setWindowOpenHandler","details","frameName","disposition","action","active","isDestroyed","canGoBack","canGoForward","canReload","isLoading","WebviewManager","margin","top","left","right","bottom","views","Map","fullscreen","view","delete","cacheWebview","update","contentBounds","undefined","refresh","key","has","set","contentView","removeChildView","focus","addChildView","Window","dialogManager","index","BaseWindow","frame","minWidth","minHeight","maximized","loadFile","openDevTools","mode","getBounds","getContentBounds","WindowSession","session","fromPartition","viewIncognito","protocol","handle","net","fetch","renderer","request","parsed","pathname","registerProtocol","appPath","getAppPath","join","getPath","mainApp","mainPreload","mainRenderer","open","start","requestSingleInstanceLock","Menu","setApplicationMenu","whenReady","quit","release","startsWith","disableHardwareAcceleration","process","platform","setAppUserModelId","getName","certificate","callback","preventDefault"],"mappings":"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"}